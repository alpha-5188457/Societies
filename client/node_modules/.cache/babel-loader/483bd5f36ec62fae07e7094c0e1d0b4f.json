{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_BY_SEARCH, FETCH_POST, FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nimport { useHistory } from 'react-router-dom';\nconst history = useHistory();\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_BY_SEARCH","FETCH_POST","FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","useHistory","history","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","push","_id","updatePost","deletePost","likePost","message"],"sources":["/Users/nishantsrinet/Desktop/Projects/MernApps/Societies/client/src/actions/posts.js"],"sourcesContent":["import {START_LOADING , END_LOADING, FETCH_BY_SEARCH, FETCH_POST, FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nimport {useHistory} from 'react-router-dom';\n\nconst history = useHistory();\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({type: START_LOADING});\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: data });\n    dispatch({type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({type: START_LOADING});\n    const { data } = await api.fetchPosts(page);\n \n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n      dispatch({type: START_LOADING});\n      const {data: { data }} = await api.fetchPostsBySearch(searchQuery);\n      \n      dispatch({ type: FETCH_BY_SEARCH, payload: data });\n      dispatch({type: END_LOADING });\n    } catch (error) {\n      console.log(error);\n    }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    dispatch({type: START_LOADING});\n    const { data } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}