{"ast":null,"code":"import { FETCH_BY_SEARCH, FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return state.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...state, action.payload];\n\n    case UPDATE:\n      return state.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return state.filter(post => post._id !== action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_BY_SEARCH","FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","state","action","type","posts","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"sources":["/Users/nishantsrinet/Desktop/Projects/MernApps/Societies/client/src/reducers/posts.js"],"sourcesContent":["import {FETCH_BY_SEARCH,  FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n        return {\n          ...state,\n          posts: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages,\n        };\n    case FETCH_ALL:\n        return {\n          ...state,\n          posts: action.payload,\n        };\n    case LIKE:\n      return state.map((post) => post._id === action.payload._id ? action.payload : post);\n    case CREATE:\n      return [...state, action.payload];\n    case UPDATE:\n      return state.map((post) => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return state.filter((post) => post._id !== action.payload);\n    default:\n      return state;\n  }\n};"],"mappings":"AAAA,SAAQA,eAAR,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,IAA7D,QAAyE,0BAAzE;AAEA,gBAAe,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,SAAL;MACI,OAAO,EACL,GAAGK,KADE;QAELG,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeC,IAFjB;QAGLC,WAAW,EAAEL,MAAM,CAACG,OAAP,CAAeE,WAHvB;QAILC,aAAa,EAAEN,MAAM,CAACG,OAAP,CAAeG;MAJzB,CAAP;;IAMJ,KAAKZ,SAAL;MACI,OAAO,EACL,GAAGK,KADE;QAELG,KAAK,EAAEF,MAAM,CAACG;MAFT,CAAP;;IAIJ,KAAKL,IAAL;MACE,OAAOC,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAAvE,CAAP;;IACF,KAAKb,MAAL;MACE,OAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;IACF,KAAKP,MAAL;MACE,OAAOG,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAAvE,CAAP;;IACF,KAAKX,MAAL;MACE,OAAOE,KAAK,CAACW,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAA3C,CAAP;;IACF;MACE,OAAOJ,KAAP;EAtBJ;AAwBD,CAzBD"},"metadata":{},"sourceType":"module"}