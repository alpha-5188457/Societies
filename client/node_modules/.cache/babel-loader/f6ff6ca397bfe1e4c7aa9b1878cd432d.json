{"ast":null,"code":"import { FETCH_BY_SEARCH, FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let useState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"names":["FETCH_BY_SEARCH","FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","useState","action","type","state","posts","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"sources":["/Users/nishantsrinet/Desktop/Projects/MernApps/Societies/client/src/reducers/posts.js"],"sourcesContent":["import {FETCH_BY_SEARCH,  FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (useState = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n        return {\n          ... state,\n          posts: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages,\n        };\n    case FETCH_ALL:\n        return {\n          ... state,\n          posts: action.payload,\n        };\n    case LIKE:\n      return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};"],"mappings":"AAAA,SAAQA,eAAR,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,IAA7D,QAAyE,0BAAzE;AAEA,gBAAe,YAA2B;EAAA,IAA1BC,QAA0B,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EACxC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,SAAL;MACI,OAAO,EACL,GAAIQ,KADC;QAELC,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeC,IAFjB;QAGLC,WAAW,EAAEN,MAAM,CAACI,OAAP,CAAeE,WAHvB;QAILC,aAAa,EAAEP,MAAM,CAACI,OAAP,CAAeG;MAJzB,CAAP;;IAMJ,KAAKb,SAAL;MACI,OAAO,EACL,GAAIQ,KADC;QAELC,KAAK,EAAEH,MAAM,CAACI;MAFT,CAAP;;IAIJ,KAAKN,IAAL;MACE,OAAOK,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAAP,CAAeM,GAA5B,GAAkCV,MAAM,CAACI,OAAzC,GAAmDK,IAAvE,CAAP;;IACF,KAAKd,MAAL;MACE,OAAO,CAAC,GAAGQ,KAAJ,EAAWH,MAAM,CAACI,OAAlB,CAAP;;IACF,KAAKR,MAAL;MACE,OAAOO,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAAP,CAAeM,GAA5B,GAAkCV,MAAM,CAACI,OAAzC,GAAmDK,IAAvE,CAAP;;IACF,KAAKZ,MAAL;MACE,OAAOM,KAAK,CAACQ,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAA3C,CAAP;;IACF;MACE,OAAOD,KAAP;EAtBJ;AAwBD,CAzBD"},"metadata":{},"sourceType":"module"}