{"ast":null,"code":"//import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n    //case LIKE:\n    //return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n\n    case 'CREATE':\n      return posts;\n    //return [...posts, action.payload];\n    //case UPDATE:\n    //return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    //case DELETE:\n    //return posts.filter((post) => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"names":["posts","action","type","payload"],"sources":["/Users/nishantsrinet/Desktop/Projects/MernApps/Memories/client/src/reducers/posts.js"],"sourcesContent":["//import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case 'FETCH_ALL':\n        return action.payload;\n    //case LIKE:\n      //return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case 'CREATE':\n        return posts;\n      //return [...posts, action.payload];\n    //case UPDATE:\n      //return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    //case DELETE:\n      //return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};"],"mappings":"AAAA;AAEA,gBAAe,YAAwB;EAAA,IAAvBA,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACI,OAAOD,MAAM,CAACE,OAAd;IACJ;IACE;;IACF,KAAK,QAAL;MACI,OAAOH,KAAP;IACF;IACF;IACE;IACF;IACE;;IACF;MACE,OAAOA,KAAP;EAbJ;AAeD,CAhBD"},"metadata":{},"sourceType":"module"}